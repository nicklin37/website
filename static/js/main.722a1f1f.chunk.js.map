{"version":3,"sources":["components/About.jsx","components/Projects.jsx","components/Contact.jsx","components/Home.jsx","components/CustomNavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","id","about","map","postDetail","index","Row","react_lazyload_lib_default","once","Col","align","xs","sm","md","smOffset","mdOffset","Image","src","imageurl","title","subtitle","desc","extras","href","link","target","Component","Projects","acc","content","projects","push","lg","codelink","demolink","getProjects","Contact","Home","lib","to","Button","componentClass","Link","bsStyle","About_About","Projects_Projects","Contact_Contact","CustomNavBar","Navbar","default","collapseOnSelect","Header","Brand","Collapse","Nav","pullRight","NavItem","eventKey","App","BrowserRouter","CustomNavBar_CustomNavBar","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.722a1f1f.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport LazyLoad from 'react-lazyload';\nimport  \"../styles/About.css\";\nimport about from \"../data/about.json\";\n\n\nexport default class About extends Component{\n    render(){\n        return(\n            <div className=\"about\">\n                <h1 id=\"about\">Here's what I'm up to</h1>\n                    <ul id=\"about-field\" >\n                        {about.map((postDetail, index)=>{\n                            return(\n                                <Row>\n                                    <LazyLoad once>\n                                    <Col align=\"center\" xs={12} sm={2} md={2} smOffset={3} mdOffset={3}>\n                                        <Image src={postDetail.imageurl} className=\"about-photo\"/>\n                                    </Col>\n                                    <Col xs={12} sm={5} md={5} className=\"about-tag\">\n                                        <h2>{postDetail.title}</h2>\n                                        <h4>{postDetail.subtitle}</h4>\n                                        <p>{postDetail.desc}</p>\n                                        {postDetail.extras != \"\" && <p><a href={postDetail.link} target=\"_blank\">{postDetail.extras}</a></p>}\n                                    </Col>\n                                    </LazyLoad>\n                                </Row> \n                            )        \n                        })}\n                    </ul>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport '../styles/Projects.css';\nimport projects from \"../data/projects.json\";\n\n\nexport default class Projects extends Component{\n\n    render(){\n        function getProjects(){\n            let acc = [];\n            let content = [];\n            //content.push(<Row>);\n            projects.map((postDetail, index) => {\n                if (index % 3 == 2){\n                    acc.push(\n                        <Col className=\"project-post\" align=\"center\" xs={12} sm={4} md={4} lg={4}>\n                            <Image src={postDetail.imageurl} className=\"projects-photo\" />\n                            <h2>{postDetail.title}</h2>\n                            {postDetail.extras != \"\" && <h4>{postDetail.extras}</h4>}\n                            <p>{postDetail.desc}</p>\n                            <h4>\n                            {postDetail.codelink != \"\" && <a href={postDetail.codelink} target=\"_blank\">Github</a>}\n                            {postDetail.demolink != \"\" && <a href={postDetail.demolink} target=\"_blank\">Demo</a>}\n                            </h4>\n                        </Col>\n                    )\n                    content.push(\n                        <Row className=\"project-row\">\n                            {acc}\n                        </Row>\n                    )\n                    acc = [];\n                }else{\n                    acc.push(\n                    <Col className=\"project-post\" align=\"center\" xs={12} sm={4} md={4} lg={4}>\n                        <Image src={postDetail.imageurl} className=\"projects-photo\" />\n                        <h2>{postDetail.title}</h2>\n                        {postDetail.extras != \"\" && <h4>{postDetail.extras}</h4>}\n                        <p>{postDetail.desc}</p>\n                        <h4>\n                        {postDetail.codelink != \"\" && <a href={postDetail.codelink} target=\"_blank\">Github</a>}\n                        {postDetail.demolink != \"\" && <a href={postDetail.demolink} target=\"_blank\">Demo</a>}\n                        </h4>\n                    </Col>)\n                }\n            });\n            return(\n                <div>\n                    {content}\n                    <Row className=\"project-row\">\n                        {acc}\n                    </Row>\n                </div>\n            )\n        }\n\n        return(\n            <div className=\"projects\">\n                <h1 id=\"projects\" >Here are some of my projects</h1>\n                {getProjects()}\n            </div>  \n        );\n    };\n}","import React, {Component} from \"react\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport LazyLoad from 'react-lazyload';\nimport  \"../styles/contact.css\";\n\n\nexport default class Contact extends Component{\n    render(){\n        return(\n            <div className=\"contact\" align=\"center\">\n                <Row>\n                    <h1 id=\"contact\">Contact me!</h1>\n                    <a href=\"https://www.linkedin.com/in/nicholas-lin-2758ba156/\" target=\"_blank\"><Image src=\"assets/linkedin.png\" className=\"logo\" id=\"linkedin\"/></a>\n                    <a href=\"https://www.github.com/nicklin37\"><Image src=\"assets/github.png\" className=\"logo\" /></a>\n                    <a href=\"mailto:nlinucla@gmail.com\" ><Image src=\"assets/email.png\" className=\"logo\" /></a>\n                </Row> \n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { HashLink as Link } from \"react-router-hash-link\";\nimport { Button } from \"react-bootstrap\";\nimport \"../styles/Home.css\";\nimport About from \"./About\";\nimport Projects from \"./Projects\";\nimport Contact from \"./Contact\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"mainbackground\">\n        \n          <div className=\"picture\">\n            <h2>Nicholas Lin</h2>\n            {/* <p>\n              I'm an undergraduate computer science student passionate about\n              building scalable projects and programming. Click on the explore\n              to learn more about me!\n            </p> */}\n            <Link to=\"#about\">\n              <div id=\"button\">\n                <Button componentClass={Link} bsStyle=\"primary\" href=\"#about\" to=\"/#about\">\n                  Explore\n                </Button>\n              </div>\n            </Link>\n          </div>\n          <About/>\n          <Projects/>\n          <Contact/>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport '../styles/CustomNavBar.css';\n\nexport default class CustomNavBar extends Component{\n    render(){\n        return(\n            <div>\n                <Navbar default collapseOnSelect>\n                    <Navbar.Header>\n                        <Navbar.Brand>\n                            <Link to=\"/\">Welcome</Link>\n                        </Navbar.Brand>\n                    </Navbar.Header>\n                    <Navbar.Collapse>\n                        <Nav pullRight>\n                            <NavItem eventKey={1} componentClass={Link} href=\"#about\" to=\"/#about\">\n                                About\n                            </NavItem>\n                            <NavItem eventKey={2} componentClass={Link} href=\"#projects\" to=\"/#projects\">\n                                Projects\n                            </NavItem>\n                            <NavItem eventKey={3} componentClass={Link} href=\"#contact\" to=\"/#contact\">\n                                Contact\n                            </NavItem>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }   \n}","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport CustomNavBar from './components/CustomNavBar';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <CustomNavBar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/#about\" component={About} />\n          <Route path=\"/#projects\" component={Projects} />\n          <route path=\"/#contact\" component={Contact} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}